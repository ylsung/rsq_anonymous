  import pyaedt

# Import necessary libraries
from pyaedt import Hfss, Circuit

# Set graphical mode
aedtapp = pyaedt.Desktop("2022.1")

# Download and open project
project_path = "path/to/project.aedt"
aedtapp.download_project(project_path)
aedtapp.open_project(project_path)

# Start HFSS with specified version
hfss = Hfss(aedtapp, "HFSS")

# Start Circuit and add HFSS dynamic link component
circuit = Circuit(aedtapp, "Circuit")
hfss_link = circuit.add_dynamic_link_component("HFSS")

# Set up dynamic link options and create ports and excitations
hfss_link.set_dynamic_link_options(
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
    "HFSS",
   